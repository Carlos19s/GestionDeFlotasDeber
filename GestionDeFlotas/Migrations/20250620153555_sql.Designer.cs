// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionDeFlotas.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620153555_sql")]
    partial class sql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionDeFlotas.Modelos.Camion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("ConductorId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("KilometrajeActual")
                        .HasColumnType("float");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConductorId");

                    b.ToTable("Camiones");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Conductor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Licencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Conductores");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.LoginDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginDto");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CamionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Pendiente")
                        .HasColumnType("bit");

                    b.Property<int>("TallerId")
                        .HasColumnType("int");

                    b.Property<string>("tipoMantenimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CamionId");

                    b.HasIndex("TallerId");

                    b.ToTable("Mantenimiento");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Taller", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CapacidadMaximaDeReparacionesSimultaneas")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Talleres");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Sensores.Modelos.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CamionId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCamion")
                        .HasColumnType("int");

                    b.Property<double>("Kilometraje")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CamionId");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Camion", b =>
                {
                    b.HasOne("GestionDeFlotas.Modelos.Conductor", "conductor")
                        .WithMany("camiones")
                        .HasForeignKey("ConductorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("conductor");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Mantenimiento", b =>
                {
                    b.HasOne("GestionDeFlotas.Modelos.Camion", "camion")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("CamionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDeFlotas.Modelos.Taller", "taller")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("TallerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("camion");

                    b.Navigation("taller");
                });

            modelBuilder.Entity("Sensores.Modelos.Sensor", b =>
                {
                    b.HasOne("GestionDeFlotas.Modelos.Camion", null)
                        .WithMany("sensores")
                        .HasForeignKey("CamionId");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Camion", b =>
                {
                    b.Navigation("Mantenimientos");

                    b.Navigation("sensores");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Conductor", b =>
                {
                    b.Navigation("camiones");
                });

            modelBuilder.Entity("GestionDeFlotas.Modelos.Taller", b =>
                {
                    b.Navigation("Mantenimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
